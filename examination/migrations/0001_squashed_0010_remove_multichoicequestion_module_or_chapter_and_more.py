# Generated by Django 4.2.5 on 2023-10-05 14:23

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):
    replaces = [
        ("examination", "0001_initial"),
        ("examination", "0002_rename_categories_category_and_more"),
        ("examination", "0003_rename_mudule_essayquestion_module_and_more"),
        ("examination", "0004_essayanswer_category_delete_essayanstocategory"),
        ("examination", "0005_rename_question_id_essayanswer_question_and_more"),
        ("examination", "0006_alter_essayquestion_level_and_more"),
        ("examination", "0007_alter_essayquestion_level_and_more"),
        ("examination", "0008_alter_multichoicequestion_options"),
        ("examination", "0009_multichoicequestion_module_or_chapter"),
        ("examination", "0010_remove_multichoicequestion_module_or_chapter_and_more"),
    ]

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "category",
                    models.CharField(
                        max_length=5, verbose_name="Licence category and subcategory"
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EssayAnswer",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("answer", models.TextField(verbose_name="Essay answer")),
                (
                    "key_points",
                    models.CharField(max_length=150, verbose_name="Answer key points"),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="examination.essayquestions",
                    ),
                ),
                ("category", models.ManyToManyField(to="examination.category")),
            ],
        ),
        migrations.CreateModel(
            name="EssayQuestionUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="examination.essayquestions",
                    ),
                ),
                (
                    "usage_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="The date the essay question has been used",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="MCQuestionUsage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "question",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="examination.multichoicequestions",
                    ),
                ),
                (
                    "usage_date",
                    models.DateField(
                        default=django.utils.timezone.now,
                        verbose_name="The date the multichoice question has been used",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="EssayQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("module", models.CharField(max_length=5)),
                ("text", models.TextField()),
                ("valid", models.BooleanField(default=True)),
                ("level", models.IntegerField(choices=[(1, "1"), (2, "2"), (3, "3")])),
                ("saving_date", models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name="MultiChoiceQuestion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("text", models.TextField(verbose_name="Question text")),
                (
                    "module",
                    models.CharField(
                        blank=True,
                        max_length=5,
                        verbose_name="The module this question belongs to",
                    ),
                ),
                (
                    "chapter",
                    models.CharField(
                        blank=True,
                        max_length=5,
                        verbose_name="The chapter this question belongs to",
                    ),
                ),
                ("answer", models.TextField(verbose_name="The right answer")),
                (
                    "alt_answer1",
                    models.TextField(verbose_name="The first wrong alternate answer"),
                ),
                (
                    "alt_answer2",
                    models.TextField(
                        verbose_name="The second wrong alternatate answer"
                    ),
                ),
                (
                    "alt_answer3",
                    models.TextField(verbose_name="The third wrong alternate answer"),
                ),
                (
                    "valid",
                    models.BooleanField(default=True, verbose_name="Question validity"),
                ),
                (
                    "level",
                    models.IntegerField(
                        choices=[(1, "1"), (2, "2"), (3, "3")],
                        verbose_name="Training level",
                    ),
                ),
                (
                    "saving_date",
                    models.DateField(auto_now=True, verbose_name="Saving date"),
                ),
            ],
            options={
                "ordering": ("-saving_date", "module", "chapter"),
            },
        ),
        migrations.AddConstraint(
            model_name="multichoicequestion",
            constraint=models.CheckConstraint(
                check=models.Q(("module", ""), ("chapter", ""), _connector="OR"),
                name="module_or_chapter",
            ),
        ),
        migrations.RemoveConstraint(
            model_name="multichoicequestion",
            name="module_or_chapter",
        ),
        migrations.AddConstraint(
            model_name="multichoicequestion",
            constraint=models.CheckConstraint(
                check=models.Q(("module", ""), ("chapter", ""), _connector="XOR"),
                name="module_xor_chapter",
            ),
        ),
    ]
